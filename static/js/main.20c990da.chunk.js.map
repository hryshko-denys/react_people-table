{"version":3,"sources":["components/Header/Header.tsx","components/Home/Home.tsx","components/NotFoundPage/NotFoundPage.tsx","api/api.ts","components/PersonRow/PersonRow.tsx","components/PeopleTable/PeopleTable.tsx","components/PeopleList/PeopleList.tsx","App.tsx","index.tsx"],"names":["Header","to","exact","Home","NotFoundPage","getData","a","fetch","then","respond","json","data","map","person","mother","find","individual","name","motherName","father","fatherName","PersonRow","people","currentPath","useParams","slug","index","rowClassName","className","selected","sexClassName","blue","sex","red","key","uuid","born","died","PeopleTable","scope","PeopleList","useState","getPeople","peopleFromServer","useEffect","fetchData","App","path","component","ReactDOM","render","document","getElementById"],"mappings":"4RAGaA,EAAa,kBACxB,oCACE,gCACE,6BACE,4BACE,4BACE,kBAAC,IAAD,CAASC,GAAG,IAAIC,OAAK,GAArB,cAEF,4BACE,kBAAC,IAAD,CAASD,GAAG,UAAUC,OAAK,GAA3B,qBCVCC,EAAW,kBACtB,0CCDWC,EAAmB,kBAC9B,+C,wCCDWC,EAAO,uCAAG,4BAAAC,EAAA,sEACQC,MAAM,qEAAqEC,MAAK,SAAAC,GAAO,OAAIA,EAAQC,UAD3G,cACfC,EADe,yBAGdA,EAAKC,KAAI,SAAAC,GAAM,kCACjBA,GADiB,IAEpBC,OAAQH,EAAKI,MAAK,SAAAC,GAAU,OAAIA,EAAWC,OAASJ,EAAOK,cAC3DC,OAAQR,EAAKI,MAAK,SAAAC,GAAU,OAAIA,EAAWC,OAASJ,EAAOO,oBANxC,2CAAH,qD,yBCcPC,G,MAAgC,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACxCC,EAAcC,cAAyBC,KAE7C,OACE,+BACGH,EAAOV,KAAI,SAACC,EAAQa,GACnB,IAAMZ,EAASD,EAAOC,OAElB,4BACE,kBAAC,IAAD,CAASb,GAAE,kBAAaY,EAAOC,OAAOW,MAAQvB,OAAK,GAChDW,EAAOC,OAAOG,OAMnB,4BAAKJ,EAAOK,YAEVC,EAASN,EAAOM,OAElB,4BACE,kBAAC,IAAD,CAASlB,GAAE,kBAAaY,EAAOM,OAAOM,MAAQvB,OAAK,GAChDW,EAAOM,OAAOF,OAMnB,4BAAKJ,EAAOO,YAGVO,EAAeC,IAAU,CAAEC,SAAUN,IAAgBV,EAAOY,OAC5DK,EAAeF,IAAU,CAC7BG,KAAqB,MAAflB,EAAOmB,IACbC,IAAoB,MAAfpB,EAAOmB,MAGd,OACE,wBACEJ,UAAWD,EACXO,IAAKC,kBAEL,4BAAKT,EAAQ,GACb,4BACE,kBAAC,IAAD,CAASzB,GAAE,kBAAaY,EAAOY,MAAQvB,OAAK,GACzCW,EAAOI,OAGZ,wBAAIW,UAAWE,GAAejB,EAAOmB,KACrC,4BAAKnB,EAAOuB,MACZ,4BAAKvB,EAAOwB,MACXvB,EACAK,SC1DAmB,G,MAAoC,SAAC,GAAgB,IAAdhB,EAAa,EAAbA,OAClD,OACE,2BAAOM,UAAU,eACf,+BACE,4BACE,wBAAIW,MAAM,OAAV,UACA,wBAAIA,MAAM,OAAV,QACA,wBAAIA,MAAM,OAAV,OACA,wBAAIA,MAAM,OAAV,QACA,wBAAIA,MAAM,OAAV,QACA,wBAAIA,MAAM,OAAV,UACA,wBAAIA,MAAM,OAAV,YAGJ,kBAAC,EAAD,CAAWjB,OAAQA,OCnBZkB,EAAiB,WAAO,IAAD,EACNC,mBAAgC,IAD1B,mBAC3BnB,EAD2B,KACnBoB,EADmB,iDAGlC,4BAAApC,EAAA,sEACiCD,IADjC,OACQsC,EADR,OAGED,EAAUC,GAHZ,4CAHkC,sBAalC,OAJAC,qBAAU,YATwB,mCAUhCC,KACC,IAGD,6BACE,iCACA,kBAAC,EAAD,CAAavB,OAAQA,MCaZwB,G,MApBC,kBACd,kBAAC,IAAD,KACE,yBAAKlB,UAAU,OACb,kBAAC,EAAD,OAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOmB,KAAK,IAAI7C,OAAK,EAAC8C,UAAW7C,IACjC,kBAAC,IAAD,CAAOD,OAAK,EAAC6C,KAAK,SAChB,kBAAC,IAAD,CAAU9C,GAAG,OAEf,kBAAC,IAAD,CACE8C,KAAK,iBACLC,UAAWR,IAEb,kBAAC,IAAD,CAAOO,KAAK,IAAIC,UAAW5C,QCvBjC6C,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.20c990da.chunk.js","sourcesContent":["import React, { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport const Header: FC = () => (\n  <>\n    <header>\n      <nav>\n        <ul>\n          <li>\n            <NavLink to=\"/\" exact>Home page</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/people\" exact>People page</NavLink>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  </>\n\n);\n","import React, { FC } from 'react';\n\nexport const Home: FC = () => (\n  <h1>Home page</h1>\n);\n","import React, { FC } from 'react';\n\nexport const NotFoundPage: FC = () => (\n  <h1>Page not found</h1>\n);\n","import { PeopleListInterface, Person } from '../interfaces';\n\nexport const getData = async (): Promise<PeopleListInterface[]> => {\n  const data: Person[] = await fetch('https://mate-academy.github.io/react_people-table/api/people.json').then(respond => respond.json());\n\n  return data.map(person => ({\n    ...person,\n    mother: data.find(individual => individual.name === person.motherName) as Person,\n    father: data.find(individual => individual.name === person.fatherName) as Person,\n  }));\n};\n","import React, { FC } from 'react';\nimport { uuid } from 'uuidv4';\nimport { NavLink, useParams } from 'react-router-dom';\nimport className from 'classnames';\nimport { PeopleListInterface } from '../../interfaces';\n\nimport './PersonRow.css';\n\ninterface PersonRowProps {\n  people: PeopleListInterface[];\n}\n\ninterface MatchParams {\n  slug: string;\n}\n\nexport const PersonRow: FC<PersonRowProps> = ({ people }) => {\n  const currentPath = useParams<MatchParams>().slug;\n\n  return (\n    <tbody>\n      {people.map((person, index) => {\n        const mother = person.mother\n          ? (\n            <td>\n              <NavLink to={`/people/${person.mother.slug}`} exact>\n                {person.mother.name}\n              </NavLink>\n            </td>\n\n          )\n          : (\n            <td>{person.motherName}</td>\n          );\n        const father = person.father\n          ? (\n            <td>\n              <NavLink to={`/people/${person.father.slug}`} exact>\n                {person.father.name}\n              </NavLink>\n            </td>\n\n          )\n          : (\n            <td>{person.fatherName}</td>\n          );\n\n        const rowClassName = className({ selected: currentPath === person.slug });\n        const sexClassName = className({\n          blue: person.sex === 'm',\n          red: person.sex === 'f',\n        });\n\n        return (\n          <tr\n            className={rowClassName}\n            key={uuid()}\n          >\n            <td>{index + 1}</td>\n            <td>\n              <NavLink to={`/people/${person.slug}`} exact>\n                {person.name}\n              </NavLink>\n            </td>\n            <td className={sexClassName}>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            {mother}\n            {father}\n          </tr>\n        );\n      })}\n    </tbody>\n  );\n};\n","import React, { FC } from 'react';\nimport { PeopleListInterface } from '../../interfaces';\nimport { PersonRow } from '../PersonRow/PersonRow';\n\nimport './PeopleTable.css';\n\ninterface PeopleTableProps {\n  people: PeopleListInterface[];\n}\n\nexport const PeopleTable: FC<PeopleTableProps> = ({ people }) => {\n  return (\n    <table className=\"PeopleTable\">\n      <thead>\n        <tr>\n          <th scope=\"col\">â„–</th>\n          <th scope=\"col\">Name</th>\n          <th scope=\"col\">Sex</th>\n          <th scope=\"col\">Born</th>\n          <th scope=\"col\">Died</th>\n          <th scope=\"col\">Mother</th>\n          <th scope=\"col\">Father</th>\n        </tr>\n      </thead>\n      <PersonRow people={people} />\n    </table>\n  );\n};\n","import React, { FC, useState, useEffect } from 'react';\nimport { getData } from '../../api/api';\nimport { PeopleListInterface } from '../../interfaces';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\n\nexport const PeopleList: FC = () => {\n  const [people, getPeople] = useState<PeopleListInterface[]>([]);\n\n  async function fetchData() {\n    const peopleFromServer = await getData();\n\n    getPeople(peopleFromServer);\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <h1>1</h1>\n      <PeopleTable people={people} />\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport {\n  HashRouter,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport { Header } from './components/Header/Header';\nimport { Home } from './components/Home/Home';\nimport { NotFoundPage } from './components/NotFoundPage/NotFoundPage';\nimport { PeopleList } from './components/PeopleList/PeopleList';\n\nimport './App.css';\n\nconst App: FC = () => (\n  <HashRouter>\n    <div className=\"App\">\n      <Header />\n    </div>\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Route exact path=\"/home\">\n        <Redirect to=\"/\" />\n      </Route>\n      <Route\n        path=\"/people/:slug?\"\n        component={PeopleList}\n      />\n      <Route path=\"*\" component={NotFoundPage} />\n    </Switch>\n\n  </HashRouter>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}