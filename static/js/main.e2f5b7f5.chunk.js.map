{"version":3,"sources":["components/Header/Header.tsx","components/Home/Home.tsx","components/NotFoundPage/NotFoundPage.tsx","api/api.ts","components/PersonRow/PersonRow.tsx","components/PersonRow/listToShow.tsx","components/PeopleTable/PeopleTableData.tsx","components/PeopleTable/PeopleTable.tsx","components/Input/Input.tsx","components/PeopleList/PeopleList.tsx","App.tsx","index.tsx"],"names":["Header","className","id","to","exact","Home","NotFoundPage","getData","a","fetch","then","respond","json","data","map","person","mother","find","individual","name","motherName","father","fatherName","PersonRow","people","currentPath","useParams","slug","location","useLocation","searchParams","URLSearchParams","search","queryFilter","get","querySort","querySortOrder","sortedList","list","querySortAdopted","toLowerCase","sort","personA","personB","localeCompare","Number","sortList","query","pattern","RegExp","filter","test","filterList","index","pathname","toString","rowClassName","sexClassName","blue","sex","red","key","uuid","born","died","peopleTableData","title","PeopleTable","history","useHistory","useState","selectedType","setSelectedType","nextOrder","scope","cell","sortCellClassName","onClick","set","push","src","alt","Input","visibleQuery","setVisibleQuery","prepareQueryToUpdate","useCallback","debounce","NewQuery","delete","placeholder","type","value","onChange","event","target","PeopleList","getPeople","peopleFromServer","useEffect","fetchData","App","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e2f5b7f5.chunk.js","sourcesContent":["import React, { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport './Header.css';\n\nexport const Header: FC = () => (\n  <header className=\"center\">\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n      <div className=\"collapse navbar-collapse\" id=\"navbarColor01\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <NavLink className=\"nav-link\" to=\"/\" exact>Home page</NavLink>\n          </li>\n          <li>\n            <NavLink className=\"nav-link\" to=\"/people\" exact>People page</NavLink>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  </header>\n);\n","import React, { FC } from 'react';\n\nimport './Home.css';\n\nexport const Home: FC = () => (\n  <h1 className=\"heading\">Home page</h1>\n);\n","import React, { FC } from 'react';\n\nimport './NotFoundPage.css';\n\nexport const NotFoundPage: FC = () => (\n  <h1 className=\"heading\">Page not found</h1>\n);\n","import { PeopleListInterface, Person } from '../interfaces';\n\nexport const getData = async (): Promise<PeopleListInterface[]> => {\n  const data: Person[] = await fetch('https://mate-academy.github.io/react_people-table/api/people.json').then(respond => respond.json());\n\n  return data.map(person => ({\n    ...person,\n    mother: data.find(individual => individual.name === person.motherName) as Person,\n    father: data.find(individual => individual.name === person.fatherName) as Person,\n  }));\n};\n","import React, { FC } from 'react';\nimport { uuid } from 'uuidv4';\nimport { Link, useParams, useLocation } from 'react-router-dom';\nimport className from 'classnames';\nimport { PeopleListInterface } from '../../interfaces';\nimport { filterList, sortList } from './listToShow';\n\nimport './PersonRow.css';\n\ninterface PersonRowProps {\n  people: PeopleListInterface[];\n}\n\ninterface MatchParams {\n  slug: string;\n}\n\nexport const PersonRow: FC<PersonRowProps> = ({ people }) => {\n  const currentPath = useParams<MatchParams>().slug;\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const queryFilter = searchParams.get('query') || '';\n  const querySort = searchParams.get('sortBy') || '';\n  const querySortOrder = searchParams.get('sortOrder') || '';\n\n  const filteredList = filterList(people, queryFilter);\n\n  const sortedList = sortList(filteredList, querySort, querySortOrder);\n\n  return (\n    <tbody>\n      {sortedList.map((person, index) => {\n        const mother = person.mother\n          ? (\n            <td>\n              <Link\n                className=\"red\"\n                to={{\n                  pathname: `/people/${person.mother.slug}`,\n                  search: searchParams.toString(),\n                }}\n              >\n                {person.mother.name}\n              </Link>\n            </td>\n\n          )\n          : (\n            <td>{person.motherName}</td>\n          );\n        const father = person.father\n          ? (\n            <td>\n              <Link\n                className=\"blue\"\n                to={{\n                  pathname: `/people/${person.father.slug}`,\n                  search: searchParams.toString(),\n                }}\n              >\n                {person.father.name}\n              </Link>\n            </td>\n\n          )\n          : (\n            <td>{person.fatherName}</td>\n          );\n\n        const rowClassName = className({ 'table-active': currentPath === person.slug });\n        const sexClassName = className({\n          blue: person.sex === 'm',\n          red: person.sex === 'f',\n        });\n\n        return (\n          <tr\n            className={rowClassName}\n            key={uuid()}\n          >\n            <td>{index + 1}</td>\n            <td>\n              <Link to={{\n                pathname: `/people/${person.slug}`,\n                search: searchParams.toString(),\n              }}\n              >\n                {person.name}\n              </Link>\n            </td>\n            <td className={sexClassName}>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            {mother}\n            {father}\n          </tr>\n        );\n      })}\n    </tbody>\n  );\n};\n","import { PeopleListInterface } from '../../interfaces';\n\nexport function filterList(people: PeopleListInterface[], query: string) {\n  const pattern = new RegExp(`${query}`, 'gi');\n\n  return query\n    ? people.filter(person => pattern.test(person.name) || pattern.test(person.motherName)\n       || pattern.test(person.fatherName))\n    : people;\n}\n\nexport function sortList(list: PeopleListInterface[], querySort: string, querySortOrder: string) {\n  const querySortAdopted = querySort.toLowerCase();\n\n  switch (querySortAdopted) {\n    case 'name':\n    case 'sex':\n      return list\n        .sort((personA, personB) => {\n          return querySortOrder === 'asc'\n            ? personA[querySortAdopted].localeCompare(personB[querySortAdopted])\n            : personB[querySortAdopted].localeCompare(personA[querySortAdopted]);\n        });\n    case 'born':\n    case 'died':\n      return list\n        .sort((personA, personB) => {\n          return querySortOrder === 'asc'\n            ? Number(personA[querySortAdopted]) - Number(personB[querySortAdopted])\n            : Number(personB[querySortAdopted]) - Number(personA[querySortAdopted]);\n        });\n    default:\n      return list;\n  }\n}\n","interface PeopleTableData {\n  title: string;\n}\n\nexport const peopleTableData: PeopleTableData[] = [\n  {\n    title: 'Name',\n  },\n  {\n    title: 'Sex',\n  },\n  {\n    title: 'Born',\n  },\n  {\n    title: 'Died',\n  },\n];\n","import React, { FC, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport className from 'classnames';\nimport { PeopleListInterface } from '../../interfaces';\nimport { PersonRow } from '../PersonRow/PersonRow';\nimport { peopleTableData } from './PeopleTableData';\n\nimport './PeopleTable.css';\n\ninterface PeopleTableProps {\n  people: PeopleListInterface[];\n}\n\nexport const PeopleTable: FC<PeopleTableProps> = ({ people }) => {\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n\n  const [selectedType, setSelectedType] = useState<string>('');\n\n  const currentOrder = searchParams.get('sortOrder');\n  const nextOrder = currentOrder === 'asc' ? 'desc' : 'asc';\n\n  return (\n    <table className=\"table table-hover\">\n      <thead>\n        <tr>\n          <th scope=\"col\">№</th>\n          {peopleTableData.map(cell => {\n            const handleSort = () => {\n              setSelectedType(cell.title);\n              searchParams.set('sortBy', cell.title);\n              searchParams.set('sortOrder', nextOrder);\n              history.push({\n                search: searchParams.toString(),\n              });\n            };\n\n            const sortCellClassName = className('Head__Cell ', { 'table-dark': (selectedType === cell.title) });\n\n            return (\n              <th\n                scope=\"col\"\n                className={sortCellClassName}\n                onClick={handleSort}\n              >\n                {selectedType === cell.title && (\n                  <img src=\"images/sort_both.png\" alt=\"sort arrow\" className=\"arrow\" />\n                )}\n                {cell.title}\n              </th>\n            );\n          })}\n          <th scope=\"col\">Mother</th>\n          <th scope=\"col\">Father</th>\n        </tr>\n      </thead>\n      <PersonRow people={people} />\n    </table>\n  );\n};\n","import React, { FC, useState, useCallback } from 'react';\nimport debounce from 'lodash/debounce';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport './Input.css';\n\nexport const Input: FC = () => {\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const query = searchParams.get('query') || '';\n\n  const [visibleQuery, setVisibleQuery] = useState<string>(query);\n\n  const prepareQueryToUpdate = useCallback(\n    debounce((NewQuery: string) => {\n      if (NewQuery) {\n        searchParams.set('query', NewQuery);\n      } else {\n        searchParams.delete('query');\n      }\n\n      history.push({\n        search: searchParams.toString(),\n      });\n    }, 500),\n    [],\n  );\n\n  const handleQueryUpdate = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setVisibleQuery(value);\n    prepareQueryToUpdate(value);\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <input\n        className=\"form-control\"\n        placeholder=\"Type name here\"\n        type=\"text\"\n        value={visibleQuery}\n        onChange={handleQueryUpdate}\n      />\n    </div>\n  );\n};\n","import React, { FC, useState, useEffect } from 'react';\nimport { getData } from '../../api/api';\nimport { PeopleListInterface } from '../../interfaces';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\nimport { Input } from '../Input/Input';\n\nimport './PeopleList.css';\n\nexport const PeopleList: FC = () => {\n  const [people, getPeople] = useState<PeopleListInterface[]>([]);\n\n  async function fetchData() {\n    const peopleFromServer = await getData();\n\n    getPeople(peopleFromServer);\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <h1 className=\"heading\">People list</h1>\n      <Input />\n      <PeopleTable\n        people={people}\n      />\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport {\n  HashRouter,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport { Header } from './components/Header/Header';\nimport { Home } from './components/Home/Home';\nimport { NotFoundPage } from './components/NotFoundPage/NotFoundPage';\nimport { PeopleList } from './components/PeopleList/PeopleList';\n\nimport './App.css';\n\nconst App: FC = () => (\n  <HashRouter>\n    <div className=\"App\">\n      <Header />\n    </div>\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Route exact path=\"/home\">\n        <Redirect to=\"/\" />\n      </Route>\n      <Route\n        path=\"/people/:slug?\"\n        component={PeopleList}\n      />\n      <Route path=\"*\" component={NotFoundPage} />\n    </Switch>\n\n  </HashRouter>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}